<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.betterhy.db.dao.generate.OaPaymentMapper">
  <resultMap id="BaseResultMap" type="com.betterhy.db.dto.OaPayment">
    <id column="PAYMENT_ID" jdbcType="BIGINT" property="paymentId" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="PAYMENT_TYPE" jdbcType="VARCHAR" property="paymentType" />
    <result column="AMOUNT" jdbcType="DECIMAL" property="amount" />
    <result column="PAYMENT_REMARK" jdbcType="VARCHAR" property="paymentRemark" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="BILL_TYPE" jdbcType="INTEGER" property="billType" />
    <result column="BILL_CODE" jdbcType="VARCHAR" property="billCode" />
    <result column="BILL_NUM" jdbcType="VARCHAR" property="billNum" />
    <result column="VEHICLE_TYPE" jdbcType="VARCHAR" property="vehicleType" />
    <result column="START_PLACE" jdbcType="VARCHAR" property="startPlace" />
    <result column="END_PLACE" jdbcType="VARCHAR" property="endPlace" />
    <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
    <result column="CHECK_IN_TIME" jdbcType="TIMESTAMP" property="checkInTime" />
    <result column="LEAVE_TIME" jdbcType="TIMESTAMP" property="leaveTime" />
    <result column="AUTH_STATUS" jdbcType="INTEGER" property="authStatus" />
    <result column="APPLY_TIME" jdbcType="TIMESTAMP" property="applyTime" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    PAYMENT_ID, USER_ID, USERNAME, PAYMENT_TYPE, AMOUNT, PAYMENT_REMARK, REMARK, BILL_TYPE,
    BILL_CODE, BILL_NUM, VEHICLE_TYPE, START_PLACE, END_PLACE, CREATE_DATE, CHECK_IN_TIME,
    LEAVE_TIME, AUTH_STATUS, APPLY_TIME, CREATE_TIME, UPDATE_TIME
  </sql>
  <select id="selectByExample" parameterType="com.betterhy.db.dto.OaPaymentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from oa_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from oa_payment
    where PAYMENT_ID = #{paymentId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from oa_payment
    where PAYMENT_ID = #{paymentId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.betterhy.db.dto.OaPaymentExample">
    delete from oa_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.betterhy.db.dto.OaPayment">
    insert into oa_payment (PAYMENT_ID, USER_ID, USERNAME,
      PAYMENT_TYPE, AMOUNT, PAYMENT_REMARK,
      REMARK, BILL_TYPE, BILL_CODE,
      BILL_NUM, VEHICLE_TYPE, START_PLACE,
      END_PLACE, CREATE_DATE, CHECK_IN_TIME,
      LEAVE_TIME, AUTH_STATUS, APPLY_TIME,
      CREATE_TIME, UPDATE_TIME)
    values (#{paymentId,jdbcType=BIGINT}, #{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
      #{paymentType,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, #{paymentRemark,jdbcType=VARCHAR},
      #{remark,jdbcType=VARCHAR}, #{billType,jdbcType=INTEGER}, #{billCode,jdbcType=VARCHAR},
      #{billNum,jdbcType=VARCHAR}, #{vehicleType,jdbcType=VARCHAR}, #{startPlace,jdbcType=VARCHAR},
      #{endPlace,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{checkInTime,jdbcType=TIMESTAMP},
      #{leaveTime,jdbcType=TIMESTAMP}, #{authStatus,jdbcType=INTEGER}, #{applyTime,jdbcType=TIMESTAMP},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.betterhy.db.dto.OaPayment">
    insert into oa_payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="paymentId != null">
        PAYMENT_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="paymentType != null">
        PAYMENT_TYPE,
      </if>
      <if test="amount != null">
        AMOUNT,
      </if>
      <if test="paymentRemark != null">
        PAYMENT_REMARK,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="billType != null">
        BILL_TYPE,
      </if>
      <if test="billCode != null">
        BILL_CODE,
      </if>
      <if test="billNum != null">
        BILL_NUM,
      </if>
      <if test="vehicleType != null">
        VEHICLE_TYPE,
      </if>
      <if test="startPlace != null">
        START_PLACE,
      </if>
      <if test="endPlace != null">
        END_PLACE,
      </if>
      <if test="createDate != null">
        CREATE_DATE,
      </if>
      <if test="checkInTime != null">
        CHECK_IN_TIME,
      </if>
      <if test="leaveTime != null">
        LEAVE_TIME,
      </if>
      <if test="authStatus != null">
        AUTH_STATUS,
      </if>
      <if test="applyTime != null">
        APPLY_TIME,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="paymentId != null">
        #{paymentId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="paymentType != null">
        #{paymentType,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="paymentRemark != null">
        #{paymentRemark,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="billType != null">
        #{billType,jdbcType=INTEGER},
      </if>
      <if test="billCode != null">
        #{billCode,jdbcType=VARCHAR},
      </if>
      <if test="billNum != null">
        #{billNum,jdbcType=VARCHAR},
      </if>
      <if test="vehicleType != null">
        #{vehicleType,jdbcType=VARCHAR},
      </if>
      <if test="startPlace != null">
        #{startPlace,jdbcType=VARCHAR},
      </if>
      <if test="endPlace != null">
        #{endPlace,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="checkInTime != null">
        #{checkInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="leaveTime != null">
        #{leaveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="authStatus != null">
        #{authStatus,jdbcType=INTEGER},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.betterhy.db.dto.OaPaymentExample" resultType="java.lang.Long">
    select count(*) from oa_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update oa_payment
    <set>
      <if test="record.paymentId != null">
        PAYMENT_ID = #{record.paymentId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentType != null">
        PAYMENT_TYPE = #{record.paymentType,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        AMOUNT = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.paymentRemark != null">
        PAYMENT_REMARK = #{record.paymentRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.billType != null">
        BILL_TYPE = #{record.billType,jdbcType=INTEGER},
      </if>
      <if test="record.billCode != null">
        BILL_CODE = #{record.billCode,jdbcType=VARCHAR},
      </if>
      <if test="record.billNum != null">
        BILL_NUM = #{record.billNum,jdbcType=VARCHAR},
      </if>
      <if test="record.vehicleType != null">
        VEHICLE_TYPE = #{record.vehicleType,jdbcType=VARCHAR},
      </if>
      <if test="record.startPlace != null">
        START_PLACE = #{record.startPlace,jdbcType=VARCHAR},
      </if>
      <if test="record.endPlace != null">
        END_PLACE = #{record.endPlace,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.checkInTime != null">
        CHECK_IN_TIME = #{record.checkInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.leaveTime != null">
        LEAVE_TIME = #{record.leaveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.authStatus != null">
        AUTH_STATUS = #{record.authStatus,jdbcType=INTEGER},
      </if>
      <if test="record.applyTime != null">
        APPLY_TIME = #{record.applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update oa_payment
    set PAYMENT_ID = #{record.paymentId,jdbcType=BIGINT},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      PAYMENT_TYPE = #{record.paymentType,jdbcType=VARCHAR},
      AMOUNT = #{record.amount,jdbcType=DECIMAL},
      PAYMENT_REMARK = #{record.paymentRemark,jdbcType=VARCHAR},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      BILL_TYPE = #{record.billType,jdbcType=INTEGER},
      BILL_CODE = #{record.billCode,jdbcType=VARCHAR},
      BILL_NUM = #{record.billNum,jdbcType=VARCHAR},
      VEHICLE_TYPE = #{record.vehicleType,jdbcType=VARCHAR},
      START_PLACE = #{record.startPlace,jdbcType=VARCHAR},
      END_PLACE = #{record.endPlace,jdbcType=VARCHAR},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      CHECK_IN_TIME = #{record.checkInTime,jdbcType=TIMESTAMP},
      LEAVE_TIME = #{record.leaveTime,jdbcType=TIMESTAMP},
      AUTH_STATUS = #{record.authStatus,jdbcType=INTEGER},
      APPLY_TIME = #{record.applyTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.betterhy.db.dto.OaPayment">
    update oa_payment
    <set>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="paymentType != null">
        PAYMENT_TYPE = #{paymentType,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        AMOUNT = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="paymentRemark != null">
        PAYMENT_REMARK = #{paymentRemark,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="billType != null">
        BILL_TYPE = #{billType,jdbcType=INTEGER},
      </if>
      <if test="billCode != null">
        BILL_CODE = #{billCode,jdbcType=VARCHAR},
      </if>
      <if test="billNum != null">
        BILL_NUM = #{billNum,jdbcType=VARCHAR},
      </if>
      <if test="vehicleType != null">
        VEHICLE_TYPE = #{vehicleType,jdbcType=VARCHAR},
      </if>
      <if test="startPlace != null">
        START_PLACE = #{startPlace,jdbcType=VARCHAR},
      </if>
      <if test="endPlace != null">
        END_PLACE = #{endPlace,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="checkInTime != null">
        CHECK_IN_TIME = #{checkInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="leaveTime != null">
        LEAVE_TIME = #{leaveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="authStatus != null">
        AUTH_STATUS = #{authStatus,jdbcType=INTEGER},
      </if>
      <if test="applyTime != null">
        APPLY_TIME = #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where PAYMENT_ID = #{paymentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.betterhy.db.dto.OaPayment">
    update oa_payment
    set USER_ID = #{userId,jdbcType=INTEGER},
      USERNAME = #{username,jdbcType=VARCHAR},
      PAYMENT_TYPE = #{paymentType,jdbcType=VARCHAR},
      AMOUNT = #{amount,jdbcType=DECIMAL},
      PAYMENT_REMARK = #{paymentRemark,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      BILL_TYPE = #{billType,jdbcType=INTEGER},
      BILL_CODE = #{billCode,jdbcType=VARCHAR},
      BILL_NUM = #{billNum,jdbcType=VARCHAR},
      VEHICLE_TYPE = #{vehicleType,jdbcType=VARCHAR},
      START_PLACE = #{startPlace,jdbcType=VARCHAR},
      END_PLACE = #{endPlace,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      CHECK_IN_TIME = #{checkInTime,jdbcType=TIMESTAMP},
      LEAVE_TIME = #{leaveTime,jdbcType=TIMESTAMP},
      AUTH_STATUS = #{authStatus,jdbcType=INTEGER},
      APPLY_TIME = #{applyTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where PAYMENT_ID = #{paymentId,jdbcType=BIGINT}
  </update>
</mapper>